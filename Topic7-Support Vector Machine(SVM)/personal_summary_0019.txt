This module dives deeper upon the concepts of linear regression, explaining upon the relevance and covariance among features or variables, while also explaining Pearsonâ€™s correlation coefficient, and providing examples of Linear regression. The module then shows and explains the Linear regression formula, while also providing a Linear hypothesis. Linear classification is then defined as a means of separation between two classes through a straight line. The module gives examples of linear classification, such as Binary, where the tasks is to classify if an image is a fruit, and multi=class, to determine what type of fruit it is. Logistic regression is then used for making these classification decisions, providing two approaches being: To ignore non-linearity, a simple method that uses least squares for classification and Using link function, being the conditional probability of the class as the output. The module then gives us the logistic regression formula which is also known as the sigmoid function. It also provides us with an example of Logistic regression on a datasheet, explaining that the weights within the data can determine if there will be no 2nd heart attack.  The module then explains upon the concepts of model complexity, and explains on what over-fitting and under-fitting is, and how it occurs while providing examples of it. The module also explains the Bias Variance Decomposition, and how bias and variance would need to be balanced. The module then explains upon Regularised Linear Models as a loss function to avoid overfitting, explaining how it works, its impact and providing methods such as LASSO, Ridge and Elastic Net. Finally, the module provides examples of how linear regression is regularised in python, and how logistic regression is applied and its regularisation through L1 and L2.  Overall, through the completion of this module, I am able to have a deeper understanding onto how Linear regression can be applied and analysed within python, and can understand how a logistic regression model is created, with an L2 regulariser with the help of python and external documentations.  