Being the start of a new trimester’s learning, Topic 1’s material focused on giving an overview of what the Unit will touch on over the trimester. The main points from this topic’s resources can be broken down into – defining Machine Learning (ML), providing insight into ML techniques, ML related math and a basic intro/refresher to Python. Machine Learning and its applications As per the resources, ML has been a concept for many years and thus has had many different definitions, however the common theme has always remained that ML refers to a way in which automated systems are able to learn from data given or “fed” to them and produce results based on defined criteria whilst learning to respond to changes in the data that is presented to them. The latter part of that definition is what is most important. Creating a basic data parsing system is not complicated  but  what  sets  ML  apart  is  it’s  ability  to  adapt  to  changes  in  the  data  it  receives  and  to overcome obstacles that may arise in the data it receives. Given  the  endless  applications  for  ML,  it  is  no  surprise  to  see  many  companies,  governments  and individuals devoting so much to the progression and development of ML tools. Some applications for ML include  robotics,  computer  vision,  sound  and  digit  recognition,  financial  analysis  and  predications, healthcare analysis and facial recognition. ML’s unique ability to adapt to the data it is provided and learn how to process new data through the different learning techniques makes it an extremely useful tool for these and other applications. Steps of Machine Learning ML is said to have 3 main steps – 1.  Data Manipulation – this encompasses the acquisition of said data, the conversion of the data into digital numeric values, the storage of data and the cleaning of data to remove data entries which add noise, redundancy or contain missing values. 2.  Analytics  –  this  is  the  step  where  the  ML  system  will  work  mainly  to  find  relationships  and correlations in the previously prepared data so that it can design a model that is accurate to the input data. This can then be used to provide the output of the ML system. 3.  Evaluation and Visualization  –  this is where ML is completely  different  from any other form of algorithm or system designed to process data. This step is where the developer provides feedback to  the  ML  model  which  allows  the  ML  model  to  learn  if  it  progressing  correctly.  Hence  the “learning”  aspect  of  Machine  Learning.  Whilst  a  normal  system  may  continue  to output  faulty data, an ML system is able to adapt its output and its processing based on feedbacks from the developers and even end users. Techniques of Machine Learning As mentioned, the key aspect of Machine Learning is that the model is able to adapt its output based on feedback it receives in order to give the most desirable output. As such, when deploying an ML system, a technique for training or learning and feedback needs to be chosen. As with all things ML, there are a couple different options: Supervised Learning In supervised learning, the training of the ML system is done using a function that is able to relate data from inputs to already known outputs. What this means is that the desirable output of the function is already known and confirmed so the output of the ML system based on the input of the system can be marked as correct or not. This feedback can then be given to the system and the system can adapt its model until it is consistently outputting the correct answer at which point evaluation data that has not been seen by the model can be used in order to test if it has been able to correct its model. Unsupervised Learning Unsupervised learning is centered around trying to find “underlying structures in a dataset which is unlabelled”. This differs from supervised learning in that there is no known output from the input data fed to the model. This type of learning is an attempt to make the machine algorithm learn from often very large datasets without additional information or guidance on the dataset. There are two popular approaches in unsupervised learning which are: - Clustering (similarity-based), density estimation - Factor analysis Clustering is a process in which similar data points are grouped together in an attempt to find similarities between the points. By finding similarities within the points, we are likely to gain insight into any underlying patterns or groupings in the dataset should these exist. When performing clustering, a set number of clusters or groups are defined. Datapoints are then divided into these groups based on similarities within them. Therefore, defining a higher number of groups or clusters will result in groups with more closely related data points. Clustering is often represented by plotting the datapoints as a scatter graph with no x,y axes and colouring the datapoints based on their cluster. Reinforcement Learning The last model or technique of machine learning that was covered is reinforcement learning. In this model, the machine learning system learns how it is expected to behave in an environment based on the feedback and interactions it receives after performing different actions. This most closely replicates how humans learn being based on instinct, curiosity, and experimentation. The system is allowed to act on its environment and will then receive a form of evaluation based on the action it has done. This is the reward. The system is told what is desirable in terms of the reward (ie – if the reward is thought to be money, the system knows that the more money it has the better it is doing) but is not told which action it has done is the correct one based on the desired goal. Model Evaluation and Selection The last bit of machine learning for this topic was an overview of Model Evaluation and Selection. Model Evaluation Model Evaluation is the process of testing a model to determine if it will do an excellent or near perfect job of predicting labels and categorizations of new and future test data. Quite obviously, if a model does not do a good job at this, it is a rather useless tool and depending on the application it could be dangerous. Model Evaluation is using test data with labels that are known as correct to the developer or tester. Given that future instances of datasets will not have known labels, it is important to test the model with this known data to ensure quality and consistent output when the model is deployed. Model Evaluation is performed in the following manner: -  Randomly split the dataset into a training dataset and a test dataset -  Learn a model using the training dataset -  Test or evaluate the model using the test dataset as well as a performance measurement such as the accuracy of a prediction -  Repeat this process several times using different random splits of the data and record the performance measurement each time in order to average the result of this -  Use this average to check the accuracy of results outputted and then continue to iterate through dataset splits until the model is able to consistently make useful predictions Model Selection Model Selection is the final step of the process and involves choosing the final model that will be deployed. To do this, the developer must choose which model is best or in other words, which is the best fit hypothesis. There are often multiple models that will produce similar results and as such it is necessary to choose the best from these. The best model can be chosen by looking at averaged evaluation scores on test datasets or cross-validation between models. Whilst it is important to choose the best fitting model, one must be wary of over-fitting which is when a model learns too much about the details and noise within a training dataset and this knowledge negatively affects the performance in real world datasets. Mathematics and Python The last two sections of this topic’s resources were a quick refresher on the math used in Machine Learning, namely vectors and vector operations, vector distances as well as matrix algebra and special matrices. The Python section was a introduction for those that haven’t used Python before and a quick refresher for those that have.  